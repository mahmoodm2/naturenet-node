
// Checks if the current operation is being performed by a specific user.
// Used to check for ownership in cases where a record knows the id of the user
// who created it.
function isOwner(user_id) {
    auth != null && auth.uid == user_id;
}

// Checks if the current operation is being performed by any authenticated user.
function isUser() {
    auth != null && auth.uid != null;
}

// Sites cannot be written to without admin privileges but are publically readable.
path /sites {
    read() { true }
    write() { false }
}

// Activities cannot be written to without admin privileges but are publically readable.
path /activities {
    read() { true }
    write() { false }
}

// Activity locations cannot be written to without admin privileges but are publically readable.
path /geo/activities {
    read() { true }
    write() { false }
    index() {[ "activity", "site" ]}

    /location {
        index() {[ "g" ]}
    }
}

path /observations {
    read() { true }
    write() { isUser() }
    index() {[ ".key" ]}

    /id {
        index() {[ ".value" ]}
    }

    /location {
        index() {[ "g" ]}
    }
}

path /ideas {
    read() { true }
    write() { isUser() }
    index() {[ ".key" ]}

    /id {
        index() {[ ".value" ]}
    }
}

// A user record cannot be created without the use of admin privileges, creation of
// new users must go via the webapp. Once created users can manage their own record.
path /users/{user_id} {

    /public {
        read() { true }
        write() { isOwner(user_id) }
    }

    /private {
        read() { isOwner(user_id) }
        write() { isOwner(user_id) }
    }
}
