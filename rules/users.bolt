type PublicUserData extends Timestamped {
    id: String
    avatar: String | Null
    display_name: String
    affiliation: String | Null
	bio: String | Null

    validate() {
        this.id == user_id
    }
}

type PrivateUserData extends Timestamped {
    id: String
    consent: Object

    validate() {
        this.id == user_id
    }
}

path /users {
    read() { true }
}

path /users/{user_id} is PublicUserData {
    write() { isOwner(user_id) }
    index() {[ ".key", "affiliation", "created_at" ]}
}

path /users-private {
    read() { false }
    write() { false }
}

path /users-private/{user_id} is PrivateUserData {
    read() { isOwner(user_id) }
    write() { isOwner(user_id) }
}